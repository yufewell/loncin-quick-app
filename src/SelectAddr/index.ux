<template>
  <div class="addr-page">
    <text class="title" style="margin-top: 226px;">选择居住小区</text>
    <select @change="onSelectPlot" class="select-css">
      <option class="option-css" for="{{communities}}" value='{{$item.community_id}}' selected="true">{{$item.community_name}}</option>
    </select>
    <text class="title">选择住址</text>
    <select @change="onSelectAddr" class="select-css">
      <option class="option-css" for="{{addrs}}" value='{{$item}}' selected="true">{{$item.address}}</option>
    </select>
    <input class="btn" type="button" value="确定" onclick="onConfirm" />
  </div>
</template>

<script>
import router from '@system.router'
import prompt from '@system.prompt'
import User from '../lib/user'
import storage from '../lib/storage'
const user = new User()

export default {
  private: {
    communities: [],    // 所有的小区
    addresses: [],      // 所有的住址
    addrs: [],          // 小区对应的住址
    userInfo: {},       // 用户信息
    selectAddr: null,   // 选中的地址
  },
  async onInit() {
    const userInfo = await user.getLocal()
    if (userInfo) {
      this.userInfo = userInfo
      const { communities, addresses } = userInfo || {}
      this.communities = communities || []
      const community_id = this.communities[0].community_id
      this.addresses = addresses || []
      this.addrs = this.addresses.filter(item => item.community_id === community_id)
      // 默认选中的地址
      this.selectAddr = this.addrs[0]
      if (this.selectAddr) {
        await storage.set('selectAddr', this.selectAddr)
      }
    }
    console.log(this.userInfo, this.communities, this.addresses, this.addrs)
  },
  onMenuPress() {
    this.$app.$def.showMenu()
  },
  onConfirm () {
    if (this.selectAddr) {
      storage.set('selectAddr', this.selectAddr)
      router.push ({
        uri: '/Index',
        params: {
          selectAddr: this.selectAddr
        }
      })
    } else {
      prompt.showToast({
        message: '请选择住址'
      })
    }
  },
  onSelectPlot (value) {
    if (value && value.newValue) {
      this.addrs = this.addresses.filter(item => item.community_id === Number(value.newValue))
    }
    console.log('onSelectPlot', value, this.addrs)
  },
  onSelectAddr (value) {
    if (value && value.newValue) {
      this.selectAddr = value.newValue
      console.log('onSelectAddr', value, this.selectAddr)
    }
  }
}
</script>

<style>
  .addr-page {
    flex: 1;
    flex-direction: column;
    align-items: center;
  }
  .select-css {
    width: 80%;
    height:68px;
    background-color:rgba(255,255,255,1);
    border-radius:34px;
    border:2px solid rgba(142,41,39,1);
    margin-bottom: 15px;
  }
  .option-css {
    font-size:26px;
    height: 60px;
    padding: 10px 0px;
    font-weight:400;
    color:rgba(51,51,51,1);
    line-height:26px;
  }
  .title {
    width: 80%;
    margin-bottom: 10px;
    height:29px;
    font-size:20px;
    font-weight:400;
    color:rgba(142,41,39,1);
    line-height:29px;
    text-align: left;
  }
  .btn {
    width: 80%;
    margin-top: 210px;
    height:68px;
    background-color:rgba(142,41,39,1);
    border-radius:34px;
    font-size: 24px;
    font-weight:400;
    color:rgba(255,255,255,1);
    line-height:34px;
  }
</style>
