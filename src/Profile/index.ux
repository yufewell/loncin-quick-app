<template>
  <div class="lc-page">
    <div class="header">
      <div class="bgc">
        <div class="header-top">
          <text class="change" @click="changeAddr">切换小区</text>
        </div>
        <div class="header-bottom">
          <image class="head" src="/Common/profile/icon-profile-touxiang@2x.png"></image>
          <div class="right">
            <text class="name">{{name}}</text>
            <text class="addr">{{address}}</text>
          </div>
        </div>
      </div>
    </div>
    <div class="tabs">
      <div for="{{tabs}}" class="tab-item" @click="tabPage($item.routeName)">
        <image class="img" src="{{$item.url}}" alt=""></image>
        <text class="icon-title">{{$item.title}}</text>
      </div>
    </div>
    <div class="btn-css">
      <input class="btn" type="button" value="退出登陆" onclick="onLoginOut" />
    </div>
  </div>
</template>

<style lang="less">
  @import './index.less';
</style>

<script>
import prompt from '@system.prompt'
import router from '@system.router'
import shortcut from '@system.shortcut'
import User from '../lib/user'
import storage from '../lib/storage'
const user = new User()

export default {
  props: {
    users: {
      type: Object,
      default: {}
    }
  },
  data() {
    return {
      userInfo: this.users,
      name: this.users.name || '暂无',
      tabs: [
        { url: '/Common/profile/icon-profile-jilu@2x.png', title: '缴纳记录', routeName: '/PaymentRecords' },
        { url: '/Common/profile/icon-profile-gongdan@2x.png', title: '报修记录', routeName: 'WorkOrder/HistoryList' },
        { url: '/Common/profile/icon-profile-youhuiquan@2x.png', title: '优惠券', routeName: '/Mall/MyCoupns' },
        { url: '/Common/profile/icon-profile-tousujianyi@2x.png', title: '投诉建议', routeName: 'AddComplain' },
        { url: '/Common/profile/icon-profile-kefu@2x.png', title: '联系客服', routeName: '' },
      ],
      selectAddr: {},
      address: ''
    }
  },
  async onInit() {
    const selectAddr = await storage.getJSON('selectAddr') || {}
    this.selectAddr = selectAddr
    this.address = selectAddr.address || ''
  },
  async onReady() {
    const create = await storage.get('create')
    if (!create) {
      setTimeout(() => {
        this.createShortIcon()
      }, 3000)
    }
  },
  changeAddr () {
    router.push ({
      uri: '/SelectAddr'
    })
  },
  tabPage(path) {
    if (path) {
      router.push ({
        uri: path
      })
    }
    console.log('path', path)
  },
  onLoginOut() {
    user.logout()
  },
  // 创建桌面图标
  createShortIcon() {
    const _this = this
    prompt.showContextMenu({
      itemList: [ '创建桌面快捷图标', '不了，谢谢！' ],
      itemColor: '#252525',
      success: function (data) {
        if (data && data.index === 0) {
          if (_this.isCreateIcon) {
            prompt.showToast({ message: '已创建桌面图标'})
            return
          }
          shortcut.install({
            async success () {
              const create = await storage.get('create')
              if (create === '1') {
                prompt.showToast({ message: '已创建桌面图标'})
                _this.isCreateIcon = true
              } else {
                await storage.set('create', '1')
                _this.isCreateIcon = true
                prompt.showToast({ message: '成功创建桌面图标'})
              }
            }
          })
        }
      },
      cancel: function (data) {
        console.log('handling cancel', JSON.stringify(data))
      },
      fail: function (data, code) {
        console.log(`handling fail, code = ${code}`)
      }
    })
  },
}
</script>
